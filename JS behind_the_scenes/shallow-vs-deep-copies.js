/*
OBJECT REFERENCE IN PRACTICE(SHALLOW VS DEEP COPIES)

PRIMITIVE  CREATE NEW VALUES IN THE HEAP WHEN WE COPY  BUT OBJECT DO NOT CREATE NEW VALUES THEY STORE SAME REFERENC TO THE OBJECT

CONST JESSICS = {}
CONST NEWJESSICA = JESSICA

WE CANT CHANGE VALUE OF CONST SO IN THIS OBJECT WE CAN ONLY CHANGE THE PROPERY VALUES AND THATS COS WE ARE NOT CHANGING THE MEMORY ADDRESS, SO THE REFERENCE TO THE OBJECT, THAT IS STORED IN THE CONST VARIABLE WHAT WE COULD NOT DO IS JESSICA = {X,23}(THIS WILL GET A NEW REFERENCE IN THE HEAP SO CONST DONT ALLOW THIS  I.E A NEW OBJECT YOU WIL GET AN ERROR (ASSIGNEMNT TO CONSTANT VARIABLE BUT WE CCAN DO JESSICA.AGE = 30;

OBJECT ARE ALSO NOT REALLY COPIED WHEN WE PASS THEM INTO A FUNCTION, BUT INSTEAD WE ONLY PASS THE REFERNCE AND SO IT IS STILL THE OBJECT IN THE HEAP INSIDE THE FUNCTION 

BUT WHAT IF WE REALLY WANT A COPY OF THE OBJECT WITHOUT CHANGING THE ORIGINAL

WE DO:

CONST JESSICA = {
	FIRSTNAME: 'JESSICA',
	LASTNAME: 'WILLIAMS',
	AGE:27,
	FAMILY:['ALICE', 'BOB'],
};

CONST JESSICACOPY = {...JESSICA};

FROM THE ABOVE WE USE THE SPREAD OPERATOR TO SPREAD THE VALUES IN THE JESSICA OBJECT INTO THAT CURLY BRACELET WHICH THEN ASSIGNS TO JESSICACOPY AND SO A NEW OBJECT IS CREATED(NEW REFERENCE) AND SO IF WE EDIT IT DOESNT AFFECT WHERE WE COPIED FROM

NOW THE ABOVE STILL HAVE A FLAW IF WE DO THIS:

JESSICACOPY.FAMILY.PUSH('MARY');
JESSICACOPY.FAMILY.PUSH('JOHN');

THE ABOVE WILL ALSO AFFECT THE ORIGINAL OBJECT COS ARRAY ITSLEF IS AN OBJECT AND THE VARIABLE OF THAT ARRAY HAS A REFERNCE WHICH WE STILL SPREAD INSIDE THE NEW OBJECT SO AS WE SPREAD THE VALUES OF THE OBJECT THE ARRAY VARIABLE WHICH IS A REFERNCE IS THE ONE WHICH WAS SPREAD AND SO IF WE EDIT IT THEN IT AFFECT WHERE IT IS REFERENCED FROM 

SO THE SPREAD OPERATOR ONLY COPIED THE FIRST LEVEL OF THE OBJECT, AND THE SECOND LEVEL OF THE OBJECT(ARRAY) VALUES WERE NOT COPIED ONLY THE REFERENCE SINCE IT IS THE NAME OF THE OBJECT WE COPIED ALONG WITH THE VALUES (THE FIRST ELEVEL COPY COPIED ONLY THE VALUES IN THE NAME OR REFERNCE THAT HOLD THE OBJECT BUT THE SECOND COPY DID NOT SPREAD THE VALUE OF THE ARRAY OBJECT INSIDE THE OBJECT LITERAL IT JUST COPY SAME REFERNCE INTO THE OBJECT LITERAL (SO THIS WHAT WE CALL THE SHALLOW COPY)


DEEP COPY / DEEP CLONE

WE USE STRUCTURED CLONE FUNCTION

CONST JESSICACLONE = STRUCTUREDCLONE(JESSICA);
JESSICACLONE.FAMILY.PUSH('MARY');
JESSICACLONE.FAMILY.PUSH('JOHN');

*/